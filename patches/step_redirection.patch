   diff --git a/simple_multistep.module b/simple_multistep.module
index 49370e5..0849bc1 100644
--- a/simple_multistep.module
+++ b/simple_multistep.module
@@ -10,6 +10,8 @@ use Drupal\Core\Form\FormStateInterface;
 use Drupal\field_group\FormatterHelper;
 use Drupal\simple_multistep\MultistepController;
 use Drupal\simple_multistep\MultistepControllerInterface;
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Symfony\Component\HttpFoundation\Cookie;
 
 /**
  * Implements hook_module_implements_alter().
@@ -77,11 +79,35 @@ function simple_multistep_register_next_step(array &$form, FormStateInterface $f
     $entity_form->setEntity($entity_updated);
   }
 
-  $multiStep->increaseStep();
+  if(isset($_COOKIE['current_step'])) {
+    $step = $_COOKIE['current_step'];
+    unset($_COOKIE['current_step']);
+    setcookie('current_step', null, -1, '/');
+    $multiStep->increaseStep($step);
+  }
+  else {
+    $multiStep->increaseStep();
+  }
   $form_state->set('multistep_controller', $multiStep);
   $form_state->setRebuild();
 }
 
+/**
+ * Validator handler for save button.
+ */
+function simple_multistep_after_save_next_step(&$form, FormStateInterface $form_state) {
+  /** @var \Drupal\simple_multistep\MultistepController $multiStep */
+
+  $path = \Drupal::service('path.current')->getPath();
+  $multiStep = $form_state->get('multistep_controller');
+  $multiStep->setFormState($form_state);
+  $current_step = $multiStep->getCurrentStep();
+  $form_state->setRebuild(TRUE);
+  $response = new RedirectResponse($path);
+  setcookie('current_step', $current_step, time() + (86400 * 30), "/"); // 86400 = 1 day
+  $form_state->setResponse($response);
+}
+
 /**
  * Submit handler for back button.
  */
diff --git a/src/FormButton.php b/src/FormButton.php
index 4f49e8a..00338d8 100644
--- a/src/FormButton.php
+++ b/src/FormButton.php
@@ -69,6 +69,29 @@ class FormButton extends FormStep {
     }
   }
 
+  /**
+   * Show save button.
+   *
+   * @param array $form
+   *   Reference to form array.
+   */
+  private function showSaveButton(array &$form) {
+  
+      if (count($this->steps) - 1 != $this->currentStep) {
+        if ($this->currentStep == 0) {
+          $form['actions']['submit']['#access'] = TRUE;
+        }
+        else {
+          $form['actions']['submit']['#access'] = TRUE;
+          $form['actions']['submit']['#submit'][] = 'simple_multistep_after_save_next_step';
+        }
+      }
+      // On last step hide next button and show save button.
+      else {
+        $form['actions']['submit']['#access'] = TRUE;
+      }
+    }
+  
   /**
    * Render form button.
    *
@@ -78,6 +101,7 @@ class FormButton extends FormStep {
   public function render(array &$form) {
     $this->showBackButton($form);
     $this->showNextButton($form);
+    $this->showSaveButton($form);
   }
 
 }
diff --git a/src/FormStep.php b/src/FormStep.php
index 78be516..37fc542 100644
--- a/src/FormStep.php
+++ b/src/FormStep.php
@@ -87,8 +87,13 @@ class FormStep {
   /**
    * Increase step number.
    */
-  public function increaseStep() {
-    $this->currentStep++;
+  public function increaseStep($step = '') {
+    if (!empty($step)) {
+      $this->currentStep = $this->currentStep + $step;
+    }
+    else {
+      $this->currentStep++;
+    }
   }
 
   /**
